@page "/User"
@using LinkClanBot3.Data
@inject LinkClanBot3Context DBContext
@inject IDialogService DialogService
@using LinkClanBot3;

<PageTitle>メンバー一覧</PageTitle>

<h1>メンバー一覧</h1>

<p>Discordサーバーに参加しているメンバー一覧です。</p>

@if (members == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<MudDataGrid Items=@members>
		<Columns>
			<TemplateColumn T="Member" Title="" Sortable="false" Filterable="false" Groupable="false">
				<CellTemplate Context="ctx">
					<MudButton OnClick="() => OpenDialogAsync(ctx.Item)">詳細</MudButton>
				</CellTemplate>
			</TemplateColumn>
			<PropertyColumn Property="x => x.CallName" Title="呼び名" />
			<PropertyColumn Property="x => x.DiscordName" Title="Discordでの名前" />
			<PropertyColumn Property="x => x.GetRoleString()" Title="役職" />
			<PropertyColumn Property="x => x.SNS_X_UserID" Title="Xアカウント" />

			<TemplateColumn Title="今月(hours)" Sortable="false" Filterable="false" Groupable="false">
				<CellTemplate Context="ctx">
					<UserVoiceTime MemberId="ctx.MemberId" MonthsAgo="0" />
				</CellTemplate>
			</TemplateColumn>

			<TemplateColumn Title="1か月前" Sortable="false" Filterable="false" Groupable="false">
				<CellTemplate Context="ctx">
					<UserVoiceTime MemberId="ctx.MemberId" MonthsAgo="1" />
				</CellTemplate>
			</TemplateColumn>

			<TemplateColumn Title="2か月前" Sortable="false" Filterable="false" Groupable="false">
				<CellTemplate Context="ctx">
					<UserVoiceTime MemberId="ctx.MemberId" MonthsAgo="2" />
				</CellTemplate>
			</TemplateColumn>

			<TemplateColumn Title="3か月前" Sortable="false" Filterable="false" Groupable="false">
				<CellTemplate Context="ctx">
					<UserVoiceTime MemberId="ctx.MemberId" MonthsAgo="3" />
				</CellTemplate>
			</TemplateColumn>
		</Columns>
	</MudDataGrid>
}

@code {
	private List<Member> members;

	private UserVoiceTime userTime = new UserVoiceTime();

	private Task OpenDialogAsync(Member member)
	{
		var options = new DialogOptions { CloseOnEscapeKey = true , MaxWidth = MaxWidth.ExtraSmall};

		var parameter = new DialogParameters();
		parameter.Add("MemberId", member.MemberID);

		return DialogService.ShowAsync<UserDialog>("Simple Dialog", parameter, options);
	}

	

	protected override async Task OnInitializedAsync()
	{
		members = DBContext.Member.Where(e => e.Role != MemberRole.Withdrawal).OrderBy(e => (int)e.Role).ToList();
	}
}
